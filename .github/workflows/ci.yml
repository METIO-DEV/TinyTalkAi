name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testing
        ports: [3306:3306]

    steps:
      # 1. Récupérer le code
      - uses: actions/checkout@v4

      # 2. Cache Composer
      - uses: actions/cache@v4
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}

      # 3. Préparer PHP
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring pdo_mysql
          coverage: none

      # 4. Installer les dépendances back-end
      - run: composer install --no-progress --no-interaction --prefer-dist

      # 5. Générer .env et clé d’application
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Generate key
        run: php artisan key:generate

      # 6. Permissions Laravel
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      # 7. Préparer Node pour compiler les assets
      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - run: |
          npm ci
          npm run build --if-present

      # 8. Lint (vérification du style de code)
      - run: vendor/bin/pint --test

      # 9. Lancer les tests
      - name: Run Pest tests
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: testing
          DB_USERNAME: root
          DB_PASSWORD: root
          REDIS_HOST: localhost
        run: php artisan test --parallel --compact
